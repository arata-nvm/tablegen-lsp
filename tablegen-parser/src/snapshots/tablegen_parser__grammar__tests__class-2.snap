---
source: tablegen-parser/src/grammar.rs
expression: "parse(\"class Foo<int A> {\n                int B;\n                int C = A;\n                let D = A;\n            }\")"
---
File
  StatementList
    Class
      Class@0..5 `class`
      Whitespace@5..6 ` `
      Identifier
        Id@6..9 `Foo`
      TemplateArgList
        Less@9..10 `<`
        TemplateArgDecl
          IntType
            Int@10..13 `int`
          Whitespace@13..14 ` `
          Identifier
            Id@14..15 `A`
        Greater@15..16 `>`
      Whitespace@16..17 ` `
      RecordBody
        ParentClassList
        Body
          LBrace@17..18 `{`
          Whitespace@18..35 `\n                `
          FieldDef
            IntType
              Int@35..38 `int`
            Whitespace@38..39 ` `
            Identifier
              Id@39..40 `B`
            Semi@40..41 `;`
          Whitespace@41..58 `\n                `
          FieldDef
            IntType
              Int@58..61 `int`
            Whitespace@61..62 ` `
            Identifier
              Id@62..63 `C`
            Whitespace@63..64 ` `
            Equal@64..65 `=`
            Whitespace@65..66 ` `
            Value
              Identifier
                Id@66..67 `A`
            Semi@67..68 `;`
          Whitespace@68..85 `\n                `
          FieldLet
            Let@85..88 `let`
            Whitespace@88..89 ` `
            Identifier
              Id@89..90 `D`
            Whitespace@90..91 ` `
            Equal@91..92 `=`
            Whitespace@92..93 ` `
            Value
              Identifier
                Id@93..94 `A`
            Semi@94..95 `;`
          Whitespace@95..108 `\n            `
          RBrace@108..109 `}`

