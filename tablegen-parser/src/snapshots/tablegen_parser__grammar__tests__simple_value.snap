---
source: tablegen-parser/src/grammar.rs
expression: "parse(\"class Foo<int A = 1, string B = \\\"hoge\\\", bit D = false, int E = ?, bits<2> F = {0, 1}, list<int> G = [1, 2], dag H = (add A:$hoge), int I = A, int J = !add(A, B), int K = !cond(false: 1, true: 2)> {\n                code C = [{ true }];\n            }\")"
---
File
  StatementList
    Class
      Class@0..5 `class`
      Whitespace@5..6 ` `
      Identifier
        Id@6..9 `Foo`
      TemplateArgList
        Less@9..10 `<`
        TemplateArgDecl
          IntType
            Int@10..13 `int`
          Whitespace@13..14 ` `
          Identifier
            Id@14..15 `A`
          Whitespace@15..16 ` `
          Equal@16..17 `=`
          Whitespace@17..18 ` `
          Value
            Integer
              IntVal@18..19 `1`
        Comma@19..20 `,`
        Whitespace@20..21 ` `
        TemplateArgDecl
          StringType
            String@21..27 `string`
          Whitespace@27..28 ` `
          Identifier
            Id@28..29 `B`
          Whitespace@29..30 ` `
          Equal@30..31 `=`
          Whitespace@31..32 ` `
          Value
            String
              StrVal@32..38 `\"hoge\"`
        Comma@38..39 `,`
        Whitespace@39..40 ` `
        TemplateArgDecl
          BitType
            Bit@40..43 `bit`
          Whitespace@43..44 ` `
          Identifier
            Id@44..45 `D`
          Whitespace@45..46 ` `
          Equal@46..47 `=`
          Whitespace@47..48 ` `
          Value
            Boolean
              FalseVal@48..53 `false`
        Comma@53..54 `,`
        Whitespace@54..55 ` `
        TemplateArgDecl
          IntType
            Int@55..58 `int`
          Whitespace@58..59 ` `
          Identifier
            Id@59..60 `E`
          Whitespace@60..61 ` `
          Equal@61..62 `=`
          Whitespace@62..63 ` `
          Value
            Uninitialized
              Question@63..64 `?`
        Comma@64..65 `,`
        Whitespace@65..66 ` `
        TemplateArgDecl
          BitsType
            Bits@66..70 `bits`
            Less@70..71 `<`
            Integer
              IntVal@71..72 `2`
            Greater@72..73 `>`
          Whitespace@73..74 ` `
          Identifier
            Id@74..75 `F`
          Whitespace@75..76 ` `
          Equal@76..77 `=`
          Whitespace@77..78 ` `
          Value
            Bits
              ValueList
                LBrace@78..79 `{`
                Value
                  Integer
                    IntVal@79..80 `0`
                Comma@80..81 `,`
                Whitespace@81..82 ` `
                Value
                  Integer
                    IntVal@82..83 `1`
                RBrace@83..84 `}`
        Comma@84..85 `,`
        Whitespace@85..86 ` `
        TemplateArgDecl
          ListType
            List@86..90 `list`
            Less@90..91 `<`
            IntType
              Int@91..94 `int`
            Greater@94..95 `>`
          Whitespace@95..96 ` `
          Identifier
            Id@96..97 `G`
          Whitespace@97..98 ` `
          Equal@98..99 `=`
          Whitespace@99..100 ` `
          Value
            List
              ValueList
                LSquare@100..101 `[`
                Value
                  Integer
                    IntVal@101..102 `1`
                Comma@102..103 `,`
                Whitespace@103..104 ` `
                Value
                  Integer
                    IntVal@104..105 `2`
                RSquare@105..106 `]`
        Comma@106..107 `,`
        Whitespace@107..108 ` `
        TemplateArgDecl
          DagType
            Dag@108..111 `dag`
          Whitespace@111..112 ` `
          Identifier
            Id@112..113 `H`
          Whitespace@113..114 ` `
          Equal@114..115 `=`
          Whitespace@115..116 ` `
          Value
            Dag
              LParen@116..117 `(`
              DagArg
                Value
                  Identifier
                    Id@117..120 `add`
              Whitespace@120..121 ` `
              DagArgList
                DagArg
                  Value
                    Identifier
                      Id@121..122 `A`
                  Colon@122..123 `:`
                  VarName
                    VarName@123..128 `$hoge`
              RParen@128..129 `)`
        Comma@129..130 `,`
        Whitespace@130..131 ` `
        TemplateArgDecl
          IntType
            Int@131..134 `int`
          Whitespace@134..135 ` `
          Identifier
            Id@135..136 `I`
          Whitespace@136..137 ` `
          Equal@137..138 `=`
          Whitespace@138..139 ` `
          Value
            Identifier
              Id@139..140 `A`
        Comma@140..141 `,`
        Whitespace@141..142 ` `
        TemplateArgDecl
          IntType
            Int@142..145 `int`
          Whitespace@145..146 ` `
          Identifier
            Id@146..147 `J`
          Whitespace@147..148 ` `
          Equal@148..149 `=`
          Whitespace@149..150 ` `
          Value
            BangOperator
              XAdd@150..154 `!add`
              LParen@154..155 `(`
              Value
                Identifier
                  Id@155..156 `A`
              Comma@156..157 `,`
              Whitespace@157..158 ` `
              Value
                Identifier
                  Id@158..159 `B`
              RParen@159..160 `)`
        Comma@160..161 `,`
        Whitespace@161..162 ` `
        TemplateArgDecl
          IntType
            Int@162..165 `int`
          Whitespace@165..166 ` `
          Identifier
            Id@166..167 `K`
          Whitespace@167..168 ` `
          Equal@168..169 `=`
          Whitespace@169..170 ` `
          Value
            CondOperator
              XCond@170..175 `!cond`
              LParen@175..176 `(`
              CondClause
                Value
                  Boolean
                    FalseVal@176..181 `false`
                Colon@181..182 `:`
                Whitespace@182..183 ` `
                Value
                  Integer
                    IntVal@183..184 `1`
              Comma@184..185 `,`
              Whitespace@185..186 ` `
              CondClause
                Value
                  Boolean
                    TrueVal@186..190 `true`
                Colon@190..191 `:`
                Whitespace@191..192 ` `
                Value
                  Integer
                    IntVal@192..193 `2`
              RParen@193..194 `)`
        Greater@194..195 `>`
      Whitespace@195..196 ` `
      RecordBody
        ParentClassList
        Body
          LBrace@196..197 `{`
          Whitespace@197..214 `\n                `
          FieldDef
            CodeType
              Code@214..218 `code`
            Whitespace@218..219 ` `
            Identifier
              Id@219..220 `C`
            Whitespace@220..221 ` `
            Equal@221..222 `=`
            Whitespace@222..223 ` `
            Value
              Code
                CodeFragment@223..233 `[{ true }]`
            Semi@233..234 `;`
          Whitespace@234..247 `\n            `
          RBrace@247..248 `}`

